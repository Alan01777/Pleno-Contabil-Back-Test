services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/backend
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./certbot/www:/var/www/certbot/
      - ./certbot/conf/:/etc/nginx/ssl/
    networks:
      - app-network

  db:
    image: postgres:alpine3.20
    container_name: db
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - app-network

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/
      - ./certbot/conf/:/etc/letsencrypt/
    networks:
      - app-network

  bucket:
    image: bitnami/minio:2024-debian-12
    container_name: bucket
    restart: always
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_DEFAULT_BUCKETS=${MINIO_DEFAULT_BUCKET}
    volumes:
      - bucket:/bitnami/minio/data
    networks:
      - app-network

  backend:
    image: alan01777/pleno-backend:latest
    env_file:
      - .env
    container_name: backend
    restart: always
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
volumes:
  rabbitmq-data:
  bucket:
  pg_data:
