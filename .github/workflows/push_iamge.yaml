# This workflow is triggered when a push event occurs on the 'main' branch.
# It builds and pushes a Docker image to Docker Hub.

name: CD - Build and Push Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Generate Short SHA
        id: sha
        run: echo "short_sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Dive and Docker-Squash installations
        uses: actions/cache@v2
        with:
          path: |
            /usr/local/bin/dive
            ~/.local/bin/docker-squash
          key: ${{ runner.os }}-dive-docker-squash-${{ hashFiles('**/push_image.yaml') }}
          restore-keys: |
            ${{ runner.os }}-dive-docker-squash-

      - name: Install Dive
        run: |
          if ! command -v dive &> /dev/null
          then
            DIVE_VERSION=$(curl -sL "https://api.github.com/repos/wagoodman/dive/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
            curl -OL https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.deb
            sudo apt install ./dive_${DIVE_VERSION}_linux_amd64.deb
          fi

      - name: Install Docker-Squash
        run: |
          if ! command -v docker-squash &> /dev/null
          then
            sudo apt install pipx
            pipx install docker-squash
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Backend Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: backend-initial:${{ env.short_sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Squash Image
        run: |
          docker-squash -t alan01777/pleno-backend:${{ env.short_sha }} backend-initial:${{ env.short_sha }}

      - name: Tag Latest
        run: |
          docker tag alan01777/pleno-backend:${{ env.short_sha }} alan01777/pleno-backend:latest

      - name: Dive Inspection
        run: |
          CI=true dive alan01777/pleno-backend:${{ env.short_sha }}

      - name: Push Images
        run: |
          docker push alan01777/pleno-backend:${{ env.short_sha }}
          docker push alan01777/pleno-backend:latest